
------\\Финальный запрос//------ 

with general_flight_information AS
  (select fl.*,
          extract(epoch
                  from fl.actual_departure - fl.scheduled_departure)/60 AS departure_delay,
          extract(epoch
                  from fl.actual_arrival - fl.scheduled_arrival)/60 AS arrival_delay,
          sum(tik_fl.amount) AS sum_price_tiket,
          extract(epoch
                  from fl.actual_arrival - fl.actual_departure)/3600 AS flight_time,
          case
              when arcrft.model = 'Boeing 777-300' then 7800/1000. -- тонн топлива в час
              when arcrft.model = 'Boeing 767-300' then 4800/1000.
              when arcrft.model = 'Sukhoi Superjet-100' then 1700/1000.
              when arcrft.model = 'Airbus A320-200' then 2580/1000.
              when arcrft.model = 'Airbus A321-200' then 3200/1000.
              when arcrft.model = 'Airbus A319-100' then 2600/1000.
              when arcrft.model = 'Boeing 737-300' then 2600/1000.
              when arcrft.model = 'Cessna 208 Caravan' then 180/1000.
              when arcrft.model = 'Bombardier CRJ-200' then 1100/1000.
          end AS tons_of_fuel_per_hour,
          case
              when extract(month
                           from fl.scheduled_departure::date) = 1 then 48893-- Январь 2017

              when extract(month
                           from fl.scheduled_departure::date) = 2 then 46672 -- Февраль 2017

              when extract(month
                           from fl.scheduled_departure::date) = 12 then 45863 -- Декабрь 2016

          end AS price_per_tons_fuel_per_month
   from dst_project.flights fl
   left join dst_project.TICKET_FLIGHTS tik_fl ON fl.flight_id = tik_fl.flight_id
   left join dst_project.aircrafts arcrft ON fl.aircraft_code = arcrft.aircraft_code
   where fl.departure_airport = 'AAQ'
     and (date_trunc('month', fl.scheduled_departure) in ('2017-01-01','2017-02-01', '2017-12-01'))
     and fl.status not in ('Cancelled')
   group by fl.flight_id,
            tons_of_fuel_per_hour)
select gfi.flight_id, 	            				-- Идентификатор рейса
       gfi.flight_no, 				            	-- Номер рейса
       gfi.scheduled_departure, 	        		-- Запланированное время отправления
       gfi.scheduled_arrival,		        		-- Запланированное время прибытия
       gfi.departure_airport,		        		-- Аэропорт отправления
       departure_airprts.city AS departure_city,	        -- Город отправления
       gfi.arrival_airport,		            		-- Аэропорт прибытия
       arrival_airprts.city AS arrival_city,		        -- Город прибытия
       gfi.actual_departure,		        		-- Фактическое время отправления
       gfi.actual_arrival,			            	-- Фактическое время отправления
       gfi.departure_delay,		            		-- Время задержки отправления
       gfi.arrival_delay,		            		-- Время задержки прибытия
       gfi.sum_price_tiket,			            	-- Сумма билетов
       gfi.flight_time,			            		-- Фактическое время в пути
       gfi.tons_of_fuel_per_hour,		        	-- Расход топлива (тонн/час)
       gfi.price_per_tons_fuel_per_month,	    	        -- Цена тонны топлива в месяц вылета
/* 
Далее считается 

	сosts_per_hour -- Расход в денежном выражении в час
	profit_flight  -- Прибыль рейса (Сумма билетов -  время    полёта * расход топлива * цену топлива)

*/
       gfi.tons_of_fuel_per_hour * gfi.price_per_tons_fuel_per_month * gfi.flight_time AS сosts_per_hour, --  Расход в денежном выражении в час
       coalesce(gfi.sum_price_tiket, 0) - (gfi.flight_time * gfi.tons_of_fuel_per_hour * gfi.price_per_tons_fuel_per_month) AS profit_flight
from general_flight_information gfi
left join dst_project.airports departure_airprts ON gfi.departure_airport = departure_airprts.airport_code
left join dst_project.airports arrival_airprts ON gfi.arrival_airport = arrival_airprts.airport_code

/* 

Стоимость топлива взята офф. сайта(с учетом НДС) топливной компании Анапы
Расход топлива взят из разных официальных источников.

*/